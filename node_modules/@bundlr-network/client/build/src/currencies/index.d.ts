/// <reference types="node" />
import BigNumber from "bignumber.js";
import { FileDataItem } from "arbundles/file";
import { Signer } from "arbundles/build/signing";
export interface Tx {
    from: string;
    to: string;
    amount: BigNumber;
    blockHeight?: BigNumber;
    pending: boolean;
    confirmed: boolean;
}
export interface CreateTxData {
    amount: BigNumber | number;
    to: string;
    fee?: string;
}
export interface Currency {
    base: [string, number];
    account: {
        key: any;
        address: string;
    };
    provider?: string;
    getTx(txId: string): Promise<Tx>;
    ownerToAddress(owner: any): string;
    getId(item: FileDataItem): Promise<string>;
    price(): Promise<number>;
    sign(data: Uint8Array): Promise<Uint8Array>;
    getSigner(): Signer;
    verify(pub: any, data: Uint8Array, signature: Uint8Array): Promise<boolean>;
    getCurrentHeight(): Promise<BigNumber>;
    getFee(amount: BigNumber | number, to?: string): Promise<BigNumber>;
    sendTx(data: any): Promise<any>;
    createTx(amount: BigNumber | number, to: string, fee?: string): Promise<{
        txId: string;
        tx: any;
    }>;
    getPublicKey(): string | Buffer;
}
interface CurrencyConfig {
    [key: string]: Currency;
}
export declare const currencies: CurrencyConfig;
export declare function getRedstonePrice(currency: string): Promise<number>;
export {};
