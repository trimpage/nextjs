"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const utils_1 = (0, tslib_1.__importDefault)(require("./utils"));
class Fund {
    constructor(utils) {
        this.utils = utils;
    }
    fund(amount, multiplier = 1.0) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
            if (!Number.isInteger(amount)) {
                throw new Error("must use an integer for funding amount");
            }
            const c = this.utils.currencyConfig;
            const to = yield this.utils.getBundlerAddress(this.utils.currency);
            let baseFee;
            if (c.base[0] === "winston") {
                baseFee = yield c.getFee(0, to);
            }
            else {
                baseFee = yield c.getFee(amount, to);
            }
            const fee = (baseFee.multipliedBy(multiplier)).toFixed(0).toString();
            const tx = yield c.createTx(amount, to, fee.toString());
            const nres = yield c.sendTx(tx.tx);
            utils_1.default.checkAndThrow(nres, `Sending transaction to the ${this.utils.currency} network`);
            const bres = yield this.utils.api.post(`/account/balance/${this.utils.currency}`, { tx_id: tx.txId });
            utils_1.default.checkAndThrow(bres, "Posting transaction information to the bundler");
            return { reward: fee, target: to, quantity: amount, id: tx.txId };
        });
    }
}
exports.default = Fund;
//# sourceMappingURL=fund.js.map