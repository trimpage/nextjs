"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withdrawBalance = void 0;
const tslib_1 = require("tslib");
const arbundles_1 = require("arbundles");
const utils_1 = require("arweave/node/lib/utils");
/**
 * Create and send a withdrawl request
 * @param utils Instance of Utils
 * @param api Instance of API
 * @param wallet Wallet to use
 * @param amount amount to withdraw in winston
 * @returns the response from the bundler
 */
function withdrawBalance(utils, api, amount) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const c = utils.currencyConfig;
        // //todo: make util functions directly return data rather than having to post-return mutate
        const data = { publicKey: yield c.getPublicKey(), currency: utils.currency, amount: amount.toString(), nonce: yield utils.getNonce() };
        const deephash = yield (0, arbundles_1.deepHash)([(0, utils_1.stringToBuffer)(data.currency), (0, utils_1.stringToBuffer)(data.amount.toString()), (0, utils_1.stringToBuffer)(data.nonce.toString())]);
        data.signature = yield c.sign(deephash);
        const ds = JSON.stringify(data);
        const du = JSON.parse(ds);
        if (du.publicKey.type === "Buffer") {
            du.publicKey = Buffer.from(du.publicKey);
        }
        if (du.signature.type === "Buffer") {
            du.signature = Buffer.from(du.signature);
        }
        else {
            du.signature = Uint8Array.from(Object.values(du.signature));
        }
        return api.post("/account/withdraw", data);
    });
}
exports.withdrawBalance = withdrawBalance;
//# sourceMappingURL=withdrawal.js.map