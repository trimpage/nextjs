import Api from "arweave/node/lib/api";
import { JWKInterface } from "arweave/node/lib/wallet";
import { AxiosResponse } from "axios";
import BigNumber from "bignumber.js";
import { Currency } from "./currencies";
export default class Utils {
    api: Api;
    private config;
    currency: string;
    currencyConfig: Currency;
    constructor(api: Api, currency: string, currencyConfig: Currency, config: {
        address: string;
        wallet: JWKInterface;
    });
    /**
     * Throws an error if the provided axios reponse has a status code != 200
     * @param res an axios response
     * @returns nothing if the status code is 200
     */
    static checkAndThrow(res: AxiosResponse, context?: string): void;
    /**
     * Gets the nonce used for withdrawl request validation from the bundler
     * @returns nonce for the current user
     */
    getNonce(): Promise<number>;
    /**
     * Gets the balance on the current bundler for the specified user
     * @param address the user's address to query
     * @returns the balance in winston
     */
    getBalance(address: string): Promise<number>;
    /**
     * Queries the bundler to get it's address for a specific currency
     * @returns the bundler's address
     */
    getBundlerAddress(currency: string): Promise<string>;
    getStorageCost(currency: string, bytes: number): Promise<BigNumber>;
}
